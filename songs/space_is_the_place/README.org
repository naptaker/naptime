#+OPTIONS: title:t toc:t date:nil author:t email:nil num:nil
#+TITLE: Space is the Place
#+DATE: [2016-06-06 Mon]
#+AUTHOR: Eric Bailey
#+EMAIL: naptakerband@gmail.com
#+LANGUAGE: en
#+CREATOR: Emacs 25.0.94.1 (Org mode 8.3.4)

* Front Matter
:PROPERTIES:
:tangle:   include/global.ily
:END:
Every good LilyPond file starts with a ~\version~:
#+BEGIN_SRC LilyPond
\version "2.19.24"
#+END_SRC

Include some libraries and such:
#+BEGIN_SRC LilyPond
#(load "../../include/naptaker.scm")
%% \include "articulate.ly"
\include "instruments.ily"
\include "openlilylib"
\useLibrary gridly
#+END_SRC

Then the ~\header~ metadata:
#+BEGIN_SRC LilyPond
\header {
  title    = "Space is the Place"
  opus     = "Naptime"
  composer = "Eric Bailey"
  poet     = "Preston Y. Drum"
  arranger = "Naptaker"
  copyright = "© 2016 Naptaker"
}
#+END_SRC
* Templates
:PROPERTIES:
:tangle:   include/global.ily
:END:
First, initialize a grid with nine segments and all the parts.
#+BEGIN_SRC LilyPond
\gridInit 9 #'("meta" "vox" "guitar" "bass" "drums up" "drums down")
#+END_SRC

Next, initialize the template with a list of the lengths (in measures)
of every segment.
#+BEGIN_SRC LilyPond
\templateInit #'(8 8 16 8 8 8 16 1 24)
#+END_SRC
* Parts
** Meta (=​"meta"​=)
:PROPERTIES:
:tangle:   include/global.ily
:END:
*** I: Drum and Bass Intro
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 1
{
  \tempo 4=150
  \mark 1
  s1*8
  \break
}
#+END_SRC
*** II: Full Band Intro
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 2
{
  \mark 2
  s1*8
  \break
}
#+END_SRC
*** III: Theme A
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 3
{
  \mark 3
  s1*4 \break
  s1*4 \pageBreak
  s1*4 \break
  s1*4 \break
}
#+END_SRC
*** IV: Theme B
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 4
{
  \mark 4
  s1*4 \break
  s1*4 \break
  \break
}
#+END_SRC
*** V: Theme C (slow)
Slow and heavy.
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 5
{
  \mark 5
  s1*8
  \break
}
#+END_SRC
*** VI: Theme C′ (double time)
The same as the previous segment, but with twice the rhythmic intensity.
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 6
{
  \mark 6
  s1*8
  \break
}
#+END_SRC
*** VII: Theme D
The triumphant stoner segment.
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 7
{
  \mark 7
  s1*16
}
#+END_SRC
*** VIII: Magic Notes
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 8
{
  \mark 8
  s1
  \break
}
#+END_SRC
*** IX: Theme B′ (reprise)
#+BEGIN_SRC LilyPond
\gridPutMusic "meta" 9
{
  \mark 9
  s1*24
  \bar "|."
}
#+END_SRC
* Main
:PROPERTIES:
:tangle:   main.ly
:END:
Include the grid, templates and header metadata ([[file:include/global.ily][global.ily]]), and the parts.
#+BEGIN_SRC LilyPond
\include "global.ily"
\include "parts/bass.ily"
\include "parts/guitar.ily"
#+END_SRC

Print out the grid while rendering and
ensure all segments are of appropriate length.
#+BEGIN_SRC LilyPond
\gridDisplay
\gridCheck
#+END_SRC

During the process of transcribing a score, it can be useful to render a
particular range of the grid. GridLy provides a function, ~gridSetRange~ to
do just that.

By default, all segments are retrieved:
#+BEGIN_SRC LilyPond :tangle no
\gridSetRange #'all
#+END_SRC

... but you can specify a dotted pair (start and end):
#+BEGIN_SRC LilyPond :tangle no
\gridSetRange #'(7 . 9)
#+END_SRC

... or a single segment index:
#+BEGIN_SRC LilyPond :tangle no
\gridSetRange 7
#+END_SRC

Configure the score to be printed, including some visual tweaks.
#+BEGIN_SRC LilyPond
\score {
  \Naptaker

  \layout {
    %% Increase the size of bar numbers by 2
    \override Score.BarNumber.font-size = #2

    %% Draw a box around bar numbers
    \override Score.BarNumber.stencil =
    #(make-stencil-boxer 0.1 0.25 ly:text-interface::print)

    \override Score.BarNumber.padding = #3
  }
}
#+END_SRC

Configure the MIDI output.
#+BEGIN_SRC LilyPond
\score {
  \unfoldRepeats \Naptaker
  \midi { }
}
#+END_SRC
* Makefile
:PROPERTIES:
:tangle:   Makefile
:END:
N.B. ~whitespace-cleanup-mode~ *must* be disabled and
~org-src-preserve-indentation~ must be non-nil.
#+BEGIN_SRC makefile
OPENLILYLIB      ?= ../../openlilylib
LILYPOND_OPTIONS  = -I $(OPENLILYLIB) -I $(OPENLILYLIB)/ly
LILYPOND_OPTIONS += -I include -I ../../include
LILYPOND_OPTIONS += -djob-count=8 -dmidi-extension=mid
ifeq ($(DEBUG),1)
	LILYPOND_OPTIONS += -V
endif

all: main.pdf

%.pdf: %.ly include/*.ily notes/*.ily parts/*.ily
	@lilypond $(LILYPOND_OPTIONS) $<
#+END_SRC

# FIXME:
# #+INCLUDE: "../README.org::*Makefile" :only-contents t
