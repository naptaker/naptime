#+OPTIONS: title:t toc:t date:nil author:t email:nil num:nil
#+TITLE: Naptime
#+DATE: [2016-06-09 Mon]
#+AUTHOR: Eric Bailey
#+EMAIL: naptakerband@gmail.com
#+LANGUAGE: en
#+CREATOR: Emacs 25.0.94.1 (Org mode 8.3.4)

* Instrument Definitions
  :PROPERTIES:
  :tangle:   include/instruments.ily
  :END:
#+BEGIN_SRC LilyPond
\version "2.19.24"

\include "templates/predefined-instruments/context-creating-function.ily"
#+END_SRC
** Guitar
#+BEGIN_SRC LilyPond
\newInstrument "Guitar"
\with {
  instrumentName = "Guitar"
  %% shortInstrumentName = "G"
  \RemoveEmptyStaves
  \override VerticalAxisGroup #'remove-first = ##t
  \clef "G_8"
}
\with {
  \consists "Staff_performer"
  midiInstrument = "electric guitar (clean)"
}
"default"
#+END_SRC
** Bass
#+BEGIN_SRC LilyPond
\newInstrument "Bass"
\with {
  instrumentName = "Bass"
  %% shortInstrumentName = "B"
  \RemoveEmptyStaves
  \override VerticalAxisGroup #'remove-first = ##t
  \clef F
  \transposition c
}
\with {
  \consists "Staff_performer"
  midiInstrument = "electric bass (finger)"
}
"default"
#+END_SRC
* Scheme Hacks
  :PROPERTIES:
  :tangle:   include/naptaker.scm
  :END:
Tweak the paper and global staff size.
#+BEGIN_SRC scheme
(set-default-paper-size "arch a" 'landscape)
(set-global-staff-size 18)
#+END_SRC

Custom drum notation.
#+BEGIN_SRC scheme
(define preston-drums
  (alist->hash-table
   '((bassdrum      default #f -3)
     (snare         default #f  1)
     (closedhihat   cross   #f  5)
     (halfopenhihat xcircle #f  5)
     (lowtom        default #f -1)
     (pedalhihat    cross   #f -5)
     (crashcymbal   cross   #f  6)
     (ridecymbal    cross   #f  4))))
#+END_SRC
** COMMENT Parenthesize
/Currently unused/
#+BEGIN_SRC scheme
(define ((my-stencils start) grob)
  (let* ((par-list (parentheses-item::calc-parenthesis-stencils grob))
         (null-par (grob-interpret-markup grob (markup #:null))))
    (if start
        (list (car par-list) null-par)
        (list null-par (cadr par-list)))))

(define startParenthesis
  (define-music-function (parser location note)
    (ly:music?)
    "Add an opened parenthesis to the left of `note"
    #{
      \once \override ParenthesesItem #'stencils = #(my-stencils #t)
      \parenthesize $note
    #}))

(define endParenthesis
  (define-music-function (parser location note)
    (ly:music?)
    "Add a closed parenthesis to the right of `note"
    #{
      \once \override ParenthesesItem #'stencils = #(my-stencils #f)
      \parenthesize $note
    #}))
#+END_SRC
** COMMENT Custom Line Breaks Engraver
/Currently unused/
#+BEGIN_SRC scheme
;; Slightly tweaked from David Nalesnik's work.
;; http://lists.gnu.org/archive/html/lilypond-user/2012-05/msg00381.html

(define (custom-line-breaks-engraver bar-list)
  (let* ((working-copy bar-list)
         (total (1+ (car working-copy))))
    (lambda (context)
      (make-engraver
       (acknowledgers
        ((paper-column-interface engraver grob source-engraver)
         (let ((internal-bar (ly:context-property context 'internalBarNumber)))
           (if (and (pair? working-copy)
                    (zero? (remainder internal-bar total))
                    (eq? #t (ly:grob-property grob 'non-musical)))
               (begin
                 (set! (ly:grob-property grob 'line-break-permission) 'force)
                 (if (null? (cdr working-copy))
                     (set! working-copy bar-list)
                     (set! working-copy (cdr working-copy)))
                 (set! total (+ total (car working-copy))))))))))))
#+END_SRC
** Naptaker Score
#+BEGIN_SRC scheme
(define Naptaker
  (define-music-function (parser location) ()
    "Return the makings of a Naptaker score."
    #{
      \new StaffGroup <<
        \new GuitarVoice = gtr <<
          { \gridGetMusic "meta" }
          { \gridGetMusic "guitar" }
        >>
        \new BassVoice = bass { \gridGetMusic "bass" }
        \new DrumStaff \with {
          drumStyleTable = #preston-drums
        } {
          <<
            <<
              \new DrumVoice { \gridGetMusic "drums up" }
              \new DrumVoice
              \with {
                \remove "Rest_engraver"
                \remove "Multi_measure_rest_engraver"
              }
              \gridGetMusic "drums down"
            >>
          >>
        }
      >>
    #}))
#+END_SRC
